{"version":3,"sources":["context/alert/alertContext.js","context/firebase/firebaseContext.js","components/Form.js","components/Notes.js","components/Loader.js","pages/Home.js","pages/About.js","components/Navbar.js","components/Alert.js","context/types.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/firebase/firebaseReducer.js","context/firebase/firebaseState.js","App.js","reportWebVitals.js","index.js"],"names":["AlertContext","createContext","FirebaseContext","Form","useState","value","setValue","alert","useContext","firebase","onSubmit","e","preventDefault","trim","addNote","then","show","catch","className","type","placeholder","onChange","target","Notes","props","notes","map","note","title","date","onClick","onRemove","id","Loader","role","Home","loading","fetchNotes","removeNote","useEffect","About","Navbar","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","Alert","hide","visible","text","aria-hidden","SHOW_ALERT","HIDE_ALERT","SHOW_LOADER","FETCH_NOTES","ADD_NOTE","REMOVE_NOTE","handlers","state","payload","alertReducer","action","DEFAULT","AlertState","children","useReducer","dispatch","Provider","filter","firebaseReducer","url","FirebaseState","showLoader","a","axios","get","result","Object","keys","data","key","Date","toJSON","post","name","console","log","Error","messages","delete","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87e15111.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nexport const AlertContext = createContext();","import {createContext} from 'react';\r\n\r\nexport const FirebaseContext = createContext();","import React, {useState, useContext} from 'react'\r\nimport {AlertContext} from \"../context/alert/alertContext\";\r\nimport {FirebaseContext} from \"../context/firebase/firebaseContext\";\r\n\r\nexport const Form = () => {\r\n\r\n    const [value, setValue] = useState('');\r\n    const alert = useContext(AlertContext);\r\n    const firebase = useContext(FirebaseContext)\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n\r\n        if (value.trim()) {\r\n            firebase.addNote(value.trim()).then(() => {\r\n                alert.show('Note was created', 'success');\r\n            }).catch(() => {\r\n                alert.show('Something wrong', 'danger');\r\n            })\r\n            setValue('');\r\n        } else {\r\n            alert.show('Enter text');\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter note\"\r\n                    value={value}\r\n                    onChange={e => setValue(e.target.value)}/>\r\n            </div>\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\">Click Me\r\n            </button>\r\n        </form>\r\n    );\r\n}","import React from 'react'\r\n\r\nexport const Notes = (props) => (\r\n    <ul className=\"list-group\">\r\n        {props.notes.map(note => {\r\n            return (\r\n                <li\r\n                    className=\"list-group-item note\"\r\n                    key={note.id}\r\n                >\r\n                    <div>\r\n                        <strong>{note.title}</strong>\r\n                        <small>{note.date}</small>\r\n                    </div>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-outline-danger btn-sm\"\r\n                        onClick={() => props.onRemove(note.id)}>Ã—\r\n                    </button>\r\n                    </li>\r\n                )\r\n            }\r\n        )}\r\n\r\n    </ul>\r\n);","import React from 'react';\r\n\r\nexport const Loader = () => (\r\n        <div className=\"text-center\">\r\n                <div className=\"spinner-border text-primary\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n        </div>\r\n);\r\n","import React, {Fragment, useContext, useEffect} from 'react';\r\nimport {Form} from \"../components/Form\";\r\nimport {Notes} from \"../components/Notes\";\r\nimport {FirebaseContext} from \"../context/firebase/firebaseContext\";\r\nimport {Loader} from \"../components/Loader\";\r\n\r\nexport const Home = () => {\r\n    const {loading, notes, fetchNotes, removeNote} = useContext(FirebaseContext)\r\n\r\n    useEffect(() => {\r\n        fetchNotes()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            <Form />\r\n\r\n            <hr/>\r\n\r\n            {loading\r\n                ? <Loader />\r\n                : <Notes notes={notes} onRemove={removeNote}/>\r\n            }\r\n\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport const About = () => (\r\n    <div className=\"jumbotron\">\r\n        <div className=\"container\">\r\n            <h1 className=\"display-4\">React with hooks</h1>\r\n            <p className=\"lead\">\r\n                Version <strong>1.0.1</strong>\r\n            </p>\r\n        </div>\r\n    </div>\r\n);","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Navbar = () => (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n        <a className=\"navbar-brand\" href=\"#\">React-example</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n                aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink\r\n                        className=\"nav-link\"\r\n                        to=\"/\">Home\r\n                    </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink\r\n                        className=\"nav-link\"\r\n                        to=\"/about\">About\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n);\r\n","import React, {useContext} from 'react'\r\nimport {AlertContext} from \"../context/alert/alertContext\";\r\n\r\nexport const Alert = () => {\r\n\r\n    const  {alert, hide} = useContext(AlertContext);\r\n\r\n    if (!alert.visible) return null\r\n\r\n    return (\r\n        <div className={`alert alert-${alert.type || 'warning'} alert-dismissible`}>\r\n            <strong>Attention!</strong>\r\n            &nbsp;{alert.text}\r\n            <button onClick={hide} type=\"button\" className=\"close\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n\r\n    );\r\n}","export const SHOW_ALERT = 'SHOW_ALERT';\r\nexport const HIDE_ALERT = 'HIDE_ALERT';\r\nexport const SHOW_LOADER = 'SHOW_LOADER';\r\nexport const FETCH_NOTES = 'FETCH_NOTES';\r\nexport const ADD_NOTE = 'ADD_NOTE';\r\nexport const REMOVE_NOTE = 'REMOVE_NOTE';\r\n","import {HIDE_ALERT, SHOW_ALERT} from \"../types\";\r\n\r\nconst handlers = {\r\n    [SHOW_ALERT]: (state, {payload}) => ({...payload, visible: true}),\r\n    [HIDE_ALERT]: state => ({...state, visible: false}),\r\n    DEFAULT: state => state\r\n};\r\n\r\nexport const alertReducer = (state, action) => {\r\n    const handle = handlers[action.type] || handlers.DEFAULT;\r\n    return handle(state, action)\r\n};","import React, {useReducer} from 'react';\r\nimport {AlertContext} from \"./alertContext\";\r\nimport {alertReducer} from \"./alertReducer\";\r\nimport {HIDE_ALERT, SHOW_ALERT} from \"../types\";\r\n\r\nexport const AlertState = ({children}) => {\r\n    const [state, dispatch] = useReducer(alertReducer, {visible: false})\r\n\r\n    const show = (text, type = 'warning') => dispatch({\r\n            type: SHOW_ALERT,\r\n            payload: {text, type}\r\n    })\r\n\r\n    const hide = (text, type = 'warning') => dispatch({\r\n            type: HIDE_ALERT,\r\n            payload: {text, type}\r\n    })\r\n\r\n    return (\r\n        <AlertContext.Provider value={{\r\n            show, hide,\r\n            alert: state\r\n        }}>\r\n            {children}\r\n        </AlertContext.Provider>\r\n    );\r\n}","import {ADD_NOTE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER} from \"../types\";\r\n\r\nconst handlers = {\r\n    [SHOW_LOADER]: state => ({...state, loading: true}),\r\n    [ADD_NOTE]: (state, payload) => ({\r\n        ...state,\r\n        notes: [...state.notes, payload]\r\n    }),\r\n    [FETCH_NOTES]: (state, {payload}) => ({...state, notes: payload, loading: false}),\r\n    [REMOVE_NOTE]: (state, {payload}) => ({\r\n        ...state,\r\n        notes: state.notes.filter(note => note.id !== payload)\r\n    }),\r\n    DEFAULT: state => state\r\n};\r\n\r\nexport const firebaseReducer = (state, action) => {\r\n    const handle = handlers[action.type] || handlers.DEFAULT;\r\n    return handle(state, action)\r\n}","import React, {useReducer} from 'react'\r\nimport axios from \"axios\"\r\nimport {FirebaseContext} from \"./firebaseContext\"\r\nimport {firebaseReducer} from \"./firebaseReducer\"\r\nimport {ADD_NOTE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER} from \"../types\"\r\n\r\n// const url = process.env.REACT_APP_DB_URL;\r\nconst url = 'https://react-hooks-example-88ef0-default-rtdb.firebaseio.com';\r\n\r\nexport const FirebaseState = ({children}) => {\r\n    const initialState= {\r\n        notes: [],\r\n        loading: false\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(firebaseReducer, initialState)\r\n\r\n    const showLoader = () => dispatch({type: SHOW_LOADER})\r\n    const fetchNotes = async () => {\r\n        showLoader()\r\n        const result = await axios.get(`${url}/notes.json`)\r\n        const payload = Object.keys(result.data).map(key => {\r\n            return {\r\n            ...result.data[key],\r\n            id: key\r\n            }\r\n        })\r\n        dispatch({\r\n            type: FETCH_NOTES,\r\n            payload\r\n        })\r\n    };\r\n\r\n    const addNote = async title => {\r\n        const note = {\r\n          title, date: new Date().toJSON()\r\n        }\r\n        try {\r\n            const result = await axios.post(`${url}/notes.json`, note)\r\n            const payload = {\r\n                ...note,\r\n                id: result.data.name\r\n            }\r\n            dispatch({\r\n                type: ADD_NOTE,\r\n                payload\r\n            })\r\n            console.log(result.data.name)\r\n        } catch (e) {\r\n            throw new Error(e.messages)\r\n        }\r\n    }\r\n\r\n    const removeNote = async id => {\r\n        await axios.delete(`${url}/notes/${id}.json `)\r\n\r\n        dispatch({\r\n            type: REMOVE_NOTE,\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    return (\r\n        <FirebaseContext.Provider value={{\r\n            showLoader, fetchNotes, addNote, removeNote,\r\n            loading: state.loading,\r\n            notes: state.notes\r\n        }}>\r\n            {children}\r\n        </FirebaseContext.Provider>\r\n    )\r\n}","import React from 'react'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport {Home} from \"./pages/Home\";\nimport {About} from \"./pages/About\";\nimport {Navbar} from \"./components/Navbar\";\nimport {Alert} from \"./components/Alert\";\nimport {AlertState} from \"./context/alert/AlertState\";\nimport {FirebaseState} from \"./context/firebase/firebaseState\";\n\n\nfunction App() {\n    return (\n        <FirebaseState>\n            <AlertState>\n                <BrowserRouter>\n                    <Navbar/>\n                    <div className=\"container pt-4\">\n                        <Alert/>\n                        <Switch>\n                            <Route path={'/'} component={Home}/>\n                            <Route path={'/about'} component={About}/>\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </AlertState>\n        </FirebaseState>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}